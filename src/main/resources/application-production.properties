# =============================================================================
# Order Processor Service - Production Environment Configuration
# =============================================================================
# This file is loaded when spring.profiles.active=production

# =============================================================================
# Spring Profile Configuration
# =============================================================================
spring.profiles.active=production

# =============================================================================
# Database Configuration
# =============================================================================
# PostgreSQL connection - connects to production Docker infrastructure
spring.datasource.url=jdbc:postgresql://localhost:5438/order_processor_service_prod_db
spring.datasource.username=orderprocessoruser
spring.datasource.password=CHANGE_ME_SECURE_ORDER_PROCESSOR_PASSWORD

# Database connection pool settings for production
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# =============================================================================
# JPA Configuration
# =============================================================================
# Production JPA settings with optimizations
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=50

# =============================================================================
# Flyway Configuration
# =============================================================================
# Database migration settings for production
spring.flyway.baseline-on-migrate=false

# =============================================================================
# Message Broker Configuration
# =============================================================================
# RabbitMQ connection - connects to production Docker infrastructure
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5674
spring.rabbitmq.username=admin
spring.rabbitmq.password=CHANGE_ME_SECURE_RABBITMQ_PASSWORD
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.publisher-returns=true

# =============================================================================
# Cache Configuration
# =============================================================================
# Redis connection - connects to production Docker infrastructure, uses database 6
spring.data.redis.host=localhost
spring.data.redis.port=6381
spring.data.redis.password=CHANGE_ME_SECURE_REDIS_PASSWORD
spring.data.redis.jedis.pool.max-active=20
spring.data.redis.jedis.pool.max-idle=10
spring.data.redis.jedis.pool.min-idle=5

# =============================================================================
# Actuator Configuration
# =============================================================================
# Production actuator settings with restricted access
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized

# =============================================================================
# Logging Configuration
# =============================================================================
# Production logging with minimal verbosity
logging.level.com.aioutlet.orderprocessor=WARN
logging.level.org.springframework.amqp=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.root=WARN

# =============================================================================
# Security Configuration
# =============================================================================
# JWT settings for production environment
security.jwt.secret=CHANGE_ME_PRODUCTION_JWT_SECRET_KEY_FOR_ORDER_PROCESSOR_SERVICE_VERY_LONG_AND_SECURE
security.jwt.expiration=28800000

# =============================================================================
# Saga Pattern Configuration
# =============================================================================
# Saga timeouts in seconds (longer for production)
saga.timeout.payment=600
saga.timeout.inventory=360
saga.timeout.shipping=480
saga.retry.maxAttempts=5
saga.retry.initialDelay=2000
saga.scheduler.stuck-sagas-rate=300000
saga.scheduler.retry-sagas-rate=120000

# =============================================================================
# Message Routing Configuration
# =============================================================================
# Production environment message broker setup
messaging.exchange.name=orders.exchange.prod
messaging.queue.order-processor=order.processor.queue.prod

# =============================================================================
# Service Discovery Configuration
# =============================================================================
# External service URLs - production microservices
services.user.url=https://yourdomain.com/user/api/v1
services.auth.url=https://yourdomain.com/auth/api/v1
services.order.url=https://yourdomain.com/order/api/v1
services.payment.url=https://yourdomain.com/payment/api/v1
services.inventory.url=https://yourdomain.com/inventory/api/v1
services.product.url=https://yourdomain.com/product/api/v1
services.admin.url=https://yourdomain.com/admin/api/v1
services.audit.url=https://yourdomain.com/audit/api/v1

# =============================================================================
# Application Configuration
# =============================================================================
# Environment-specific application settings
app.environment=production
app.debug.enabled=false
app.test.data.enabled=false
app.metrics.detailed=false

# =============================================================================
# CORS Configuration
# =============================================================================
# Production CORS settings with restricted origins
app.cors.allowed-origins=https://yourdomain.com,https://www.yourdomain.com,https://admin.yourdomain.com
app.cors.allowed-headers=Authorization,Content-Type,Accept,X-Requested-With
app.cors.max-age=7200

# =============================================================================
# Security Configuration
# =============================================================================
# Production security settings
server.ssl.enabled=false
server.error.include-stacktrace=never
server.error.include-message=never

# =============================================================================
# Observability Configuration
# =============================================================================
# Tracing and monitoring for production
app.tracing.enabled=true
app.tracing.sample-rate=0.01
app.correlation-id.header=x-correlation-id
