# =============================================================================
# Order Processor Service - Production Environment Configuration
# =============================================================================
# This file is loaded when spring.profiles.active=production

# Server Configuration
server.port=8083
server.servlet.context-path=/api

# Spring Configuration
spring.application.name=order-processor-service
spring.profiles.active=production

# Database Configuration (PostgreSQL - connects to Docker infrastructure)
spring.datasource.url=jdbc:postgresql://localhost:5438/order_processor_service_prod_db
spring.datasource.username=orderprocessoruser
spring.datasource.password=CHANGE_ME_SECURE_ORDER_PROCESSOR_PASSWORD
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Flyway Configuration
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=false
spring.flyway.enabled=true

# RabbitMQ Configuration (connects to Docker infrastructure)
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5674
spring.rabbitmq.username=admin
spring.rabbitmq.password=CHANGE_ME_SECURE_RABBITMQ_PASSWORD
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=30000
spring.rabbitmq.requested-heartbeat=30
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.publisher-returns=true

# Redis Configuration (connects to Docker infrastructure)
spring.redis.host=localhost
spring.redis.port=6381
spring.redis.password=CHANGE_ME_SECURE_REDIS_PASSWORD
spring.redis.database=6
spring.redis.timeout=2000ms
spring.redis.jedis.pool.max-active=20
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.min-idle=5

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true
management.health.rabbit.enabled=true
management.health.redis.enabled=true

# Logging Configuration
logging.level.com.aioutlet.orderprocessor=WARN
logging.level.org.springframework.amqp=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.root=WARN

# JWT Configuration
security.jwt.secret=CHANGE_ME_PRODUCTION_JWT_SECRET_KEY_FOR_ORDER_PROCESSOR_SERVICE_VERY_LONG_AND_SECURE
security.jwt.issuer=aioutlet-auth-service
security.jwt.audience=aioutlet-order-processor-service
security.jwt.expiration=28800000

# Saga Configuration
saga.timeout.payment=600
saga.timeout.inventory=360
saga.timeout.shipping=480
saga.retry.maxAttempts=5
saga.retry.backoffMultiplier=2
saga.retry.initialDelay=2000
saga.scheduler.stuck-sagas-rate=300000
saga.scheduler.retry-sagas-rate=120000

# Message Broker Configuration
messaging.exchange.name=orders.exchange.prod
messaging.exchange.type=topic
messaging.queue.order-processor=order.processor.queue.prod
messaging.routing-key.order-created=order.created
messaging.routing-key.order-updated=order.updated
messaging.routing-key.order-cancelled=order.cancelled
messaging.routing-key.payment-processed=payment.processed
messaging.routing-key.payment-failed=payment.failed
messaging.routing-key.inventory-reserved=inventory.reserved
messaging.routing-key.inventory-failed=inventory.failed
messaging.routing-key.shipping-prepared=shipping.prepared
messaging.routing-key.shipping-failed=shipping.failed

# External Services Configuration (connects to other services)
services.user.url=https://yourdomain.com/user/api/v1
services.auth.url=https://yourdomain.com/auth/api/v1
services.order.url=https://yourdomain.com/order/api/v1
services.payment.url=https://yourdomain.com/payment/api/v1
services.inventory.url=https://yourdomain.com/inventory/api/v1
services.product.url=https://yourdomain.com/product/api/v1
services.admin.url=https://yourdomain.com/admin/api/v1
services.audit.url=https://yourdomain.com/audit/api/v1

# Environment-specific settings
app.environment=production
app.debug.enabled=false
app.test.data.enabled=false
app.metrics.detailed=false

# CORS Configuration
app.cors.allowed-origins=https://yourdomain.com,https://www.yourdomain.com,https://admin.yourdomain.com
app.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
app.cors.allowed-headers=Authorization,Content-Type,Accept,X-Requested-With
app.cors.allow-credentials=true
app.cors.max-age=7200

# Security Configuration
server.ssl.enabled=false
server.error.include-stacktrace=never
server.error.include-message=never
