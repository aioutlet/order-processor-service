# =============================================================================
# Order Processor Service - Default Configuration
# =============================================================================
# This is the base configuration file for the Order Processor Service
# Environment-specific configurations override these defaults

# =============================================================================
# Spring Application Configuration
# =============================================================================
spring.application.name=order-processor-service
spring.application.version=1.0.0

# =============================================================================
# Server Configuration
# =============================================================================
server.port=8083
server.servlet.context-path=/api

# =============================================================================
# Profile Configuration
# =============================================================================
# Default profile - can be overridden by environment variables or command line
spring.profiles.active=development

# =============================================================================
# Common Database Configuration
# =============================================================================
# Database driver configuration
spring.datasource.driver-class-name=org.postgresql.Driver

# =============================================================================
# Common JPA Configuration
# =============================================================================
# Hibernate dialect for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# =============================================================================
# Common Flyway Configuration
# =============================================================================
spring.flyway.locations=classpath:db/migration
spring.flyway.enabled=true

# =============================================================================
# Common RabbitMQ Configuration
# =============================================================================
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=30000
spring.rabbitmq.requested-heartbeat=30

# =============================================================================
# Common Redis Configuration
# =============================================================================
spring.redis.database=6
spring.redis.timeout=2000ms

# =============================================================================
# Common Actuator Configuration
# =============================================================================
management.health.db.enabled=true
management.health.rabbit.enabled=true
management.health.redis.enabled=true

# =============================================================================
# Common JWT Configuration
# =============================================================================
# JWT secret - must match the JWT_SECRET used by auth-service
# In production, this should be loaded from secure environment variables
jwt.secret=${JWT_SECRET:8tDBDMcpxroHoHjXjk8xp/uAn8rzD4y8ZZremFkC4gI=}
# TODO: Enable issuer and audience validation when auth-service is updated to include these claims
# security.jwt.issuer=aioutlet-auth-service
# security.jwt.audience=aioutlet-order-processor-service

# =============================================================================
# Common Saga Configuration
# =============================================================================
saga.retry.backoffMultiplier=2

# =============================================================================
# Common Message Broker Configuration
# =============================================================================
# Message broker provider (RabbitMQ, Kafka, AzureServiceBus)
messaging.provider=RabbitMQ
messaging.exchange.name=aioutlet.events
messaging.exchange.type=topic
messaging.queue.order-processor=order-processor-queue
messaging.routing-key.order-created=order.created
messaging.routing-key.order-updated=order.updated
messaging.routing-key.order-cancelled=order.cancelled
messaging.routing-key.order-shipped=order.shipped
messaging.routing-key.order-delivered=order.delivered
messaging.routing-key.order-deleted=order.deleted
messaging.routing-key.order-status-changed=order.status.changed
messaging.routing-key.payment-processed=payment.processed
messaging.routing-key.payment-failed=payment.failed
messaging.routing-key.inventory-reserved=inventory.reserved
messaging.routing-key.inventory-failed=inventory.failed
messaging.routing-key.shipping-prepared=shipping.prepared
messaging.routing-key.shipping-failed=shipping.failed

# RabbitMQ specific configuration
messaging.rabbitmq.host=localhost
messaging.rabbitmq.port=5672
messaging.rabbitmq.username=admin
messaging.rabbitmq.password=admin123
messaging.rabbitmq.virtual-host=/

# Kafka specific configuration (for future use)
messaging.kafka.brokers=localhost:9092
messaging.kafka.group-id=order-processor-service
messaging.kafka.topic=aioutlet.events

# Azure Service Bus specific configuration (for future use)
messaging.azure-service-bus.namespace=
messaging.azure-service-bus.connection-string=
messaging.azure-service-bus.use-managed-identity=true
messaging.azure-service-bus.topic-name=aioutlet-events
messaging.azure-service-bus.subscription-name=order-processor-subscription

# =============================================================================
# Common CORS Configuration
# =============================================================================
app.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
app.cors.allow-credentials=true
