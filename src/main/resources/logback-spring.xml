<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    
    <!-- Import OpenTelemetry appender -->
    <appender name="OTEL" class="io.opentelemetry.instrumentation.logback.appender.v1_0.OpenTelemetryAppender" />

    <!-- Console appender with unified format to match user service -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- Format: [timestamp] [level] service [correlationId] [traceId] [spanId]: message -->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%level] %X{serviceName:-order-processor-service} [%X{correlationId:-no-correlation}] [%X{traceId:-}] [%X{spanId:-}]: %msg%n</pattern>
        </encoder>
    </appender>

    <!-- File appender with unified format -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/order-processor-service.log</file>
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%level] %X{serviceName:-order-processor-service} [%X{correlationId:-no-correlation}] [%X{traceId:-}] [%X{spanId:-}]: %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/order-processor-service.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- JSON appender for structured logging (matches user service unified schema) -->
    <appender name="JSON" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <fieldName>timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSXXX</pattern>
                </timestamp>
                <logLevel>
                    <fieldName>level</fieldName>
                </logLevel>
                <loggerName>
                    <fieldName>logger</fieldName>
                </loggerName>
                <message>
                    <fieldName>message</fieldName>
                </message>
                <mdc>
                    <includeMdcKeyName>correlationId</includeMdcKeyName>
                    <includeMdcKeyName>traceId</includeMdcKeyName>
                    <includeMdcKeyName>spanId</includeMdcKeyName>
                    <includeMdcKeyName>serviceName</includeMdcKeyName>
                    <includeMdcKeyName>serviceVersion</includeMdcKeyName>
                </mdc>
                <stackTrace>
                    <fieldName>stackTrace</fieldName>
                </stackTrace>
                <pattern>
                    <pattern>
                        {
                            "service": "%X{serviceName:-order-processor-service}",
                            "version": "%X{serviceVersion:-1.0.0}",
                            "environment": "${SPRING_PROFILES_ACTIVE:-local}",
                            "correlationId": "%X{correlationId}",
                            "traceId": "%X{traceId}",
                            "spanId": "%X{spanId}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- Root logger -->
    <root level="ERROR">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="OTEL"/>
        <!-- Uncomment for JSON logging -->
        <!-- <appender-ref ref="JSON"/> -->
    </root>

    <!-- Application logging - only show INFO and above -->
    <logger name="com.aioutlet.orderprocessor" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="OTEL"/>
    </logger>

    <!-- Suppress all Spring Boot startup noise -->
    <logger name="org.springframework" level="ERROR"/>
    <logger name="org.springframework.boot" level="ERROR"/>
    <logger name="org.springframework.boot.autoconfigure" level="ERROR"/>
    <logger name="org.springframework.web" level="ERROR"/>
    <logger name="org.springframework.data" level="ERROR"/>
    <logger name="org.springframework.amqp" level="ERROR"/>
    <logger name="org.springframework.security" level="ERROR"/>
    <logger name="org.springframework.context" level="ERROR"/>
    
    <!-- Suppress Hibernate noise -->
    <logger name="org.hibernate" level="ERROR"/>
    <logger name="org.hibernate.SQL" level="ERROR"/>
    <logger name="org.hibernate.validator" level="ERROR"/>
    <logger name="org.hibernate.type" level="ERROR"/>
    
    <!-- Suppress database/connection pool noise -->
    <logger name="com.zaxxer.hikari" level="ERROR"/>
    <logger name="org.postgresql" level="ERROR"/>
    <logger name="org.flywaydb" level="ERROR"/>
    
    <!-- Suppress Tomcat noise -->
    <logger name="org.apache.catalina" level="ERROR"/>
    <logger name="org.apache.tomcat" level="ERROR"/>
    <logger name="org.apache.coyote" level="ERROR"/>
    
    <!-- Suppress OpenTelemetry noise -->
    <logger name="io.opentelemetry" level="ERROR"/>
    
    <!-- Reduce verbose tracing logs in development -->
    <springProfile name="development,local">
        <logger name="io.opentelemetry" level="ERROR"/>
    </springProfile>
    
</configuration>
