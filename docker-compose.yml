version: '3.8'

services:
  order-processor-service:
    build: .
    container_name: order-processor-service-development
    restart: unless-stopped
    ports:
      - '8083:8083'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - aioutlet-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8083/api/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:latest
    container_name: order-processor-postgres-development
    restart: unless-stopped
    environment:
      - POSTGRES_DB=OrderProcessorDb_Dev
      - POSTGRES_USER=orderprocessor
      - POSTGRES_PASSWORD=dev_password_123
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U orderprocessor -d OrderProcessorDb_Dev']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - aioutlet-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: order-processor-rabbitmq-development
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=orderprocessor
      - RABBITMQ_DEFAULT_PASS=dev_rabbitmq_123
    ports:
      - '5673:5672'
      - '15673:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - aioutlet-network

  prometheus:
    image: prom/prometheus:latest
    container_name: order-processor-prometheus-development
    restart: unless-stopped
    ports:
      - '9091:9090'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - aioutlet-network

  grafana:
    image: grafana/grafana:latest
    container_name: order-processor-grafana-development
    restart: unless-stopped
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=dev_grafana_123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - aioutlet-network

volumes:
  postgres_data:
  rabbitmq_data:
  grafana_data:

networks:
  aioutlet-network:
    driver: bridge
